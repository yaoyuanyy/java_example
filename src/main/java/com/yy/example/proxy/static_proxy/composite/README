这里是通过组合的方式实现静态代理：

真实对象和两个代理类都实现同一个接口：Moving，且两个代理类TankTimeProxy,TankLogProxy都持有接口Moving的引用。
通过组合的方式，很好的解决了继承方式带来的问题。但是它在某种情景下也会带来其他的问题。往下看

问题：
如果真实对象或接口只有一个方法(move())，这个方式是很好的。但是如果有一个以上(又加了一个stop())，你会发现：代码中有大量重复的代码。
即move()和stop()包含了重复的代码，这样增加了代码的维护性和难度，也不容易阅读

解决办法：
动态代理，具体请看com.yy.proxy.dynamic_proxy包