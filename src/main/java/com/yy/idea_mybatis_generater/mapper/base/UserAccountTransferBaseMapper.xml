<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yy.idea_mybatis_generater.mapper.base.UserAccountTransferBaseMapper">


    <insert id="insertUserAccountTransfer"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `user_account_transfer`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="userId!=null">
                        `user_id`,
                    </if>
                    <if test="type!=null">
                        `type`,
                    </if>
                    <if test="status!=null">
                        `status`,
                    </if>
                    <if test="amount!=null">
                        `amount`,
                    </if>
                    <if test="transferUuid!=null">
                        `transfer_uuid`,
                    </if>
                    <if test="retryTimes!=null">
                        `retry_times`,
                    </if>
                    <if test="updateTime!=null">
                        `update_time`,
                    </if>
                    <if test="createTime!=null">
                        `create_time`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="userId!=null">
                    #{userId},
                </if>
                <if test="type!=null">
                    #{type},
                </if>
                <if test="status!=null">
                    #{status},
                </if>
                <if test="amount!=null">
                    #{amount},
                </if>
                <if test="transferUuid!=null">
                    #{transferUuid},
                </if>
                <if test="retryTimes!=null">
                    #{retryTimes},
                </if>
                <if test="updateTime!=null">
                    #{updateTime},
                </if>
                <if test="createTime!=null">
                    #{createTime},
                </if>
        </trim>
        )
    </insert>




    <update id="updateUserAccountTransfer">
        UPDATE `user_account_transfer`
        SET
        <trim suffixOverrides=",">
            <if test="userId != null">
                `user_id` = #{userId},
            </if>
            <if test="type != null">
                `type` = #{type},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
            <if test="amount != null">
                `amount` = #{amount},
            </if>
            <if test="transferUuid != null and transferUuid!=''">
                `transfer_uuid` = #{transferUuid},
            </if>
            <if test="retryTimes != null">
                `retry_times` = #{retryTimes},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `user_account_transfer`
        SET
        <trim suffixOverrides=",">
        <if test="set.userId != null">
            `user_id` = #{set.userId},
        </if>
        <if test="set.type != null">
            `type` = #{set.type},
        </if>
        <if test="set.status != null">
            `status` = #{set.status},
        </if>
        <if test="set.amount != null">
            `amount` = #{set.amount},
        </if>
        <if test="set.transferUuid != null and set.transferUuid!=''">
            `transfer_uuid` = #{set.transferUuid},
        </if>
        <if test="set.retryTimes != null">
            `retry_times` = #{set.retryTimes},
        </if>
        <if test="set.updateTime != null">
            `update_time` = #{set.updateTime},
        </if>
        <if test="set.createTime != null">
            `create_time` = #{set.createTime},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.userIdList != null">
                    `user_id` in
                    <foreach collection="where.userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.userIdSt !=null">
                `user_id` >= #{where.userIdSt} and
            </if>
            <if test="where.userIdEd!=null">
                `user_id` &lt;= #{where.userIdEd} and
            </if>
                <if test="where.typeList != null">
                    `type` in
                    <foreach collection="where.typeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.typeSt !=null">
                `type` >= #{where.typeSt} and
            </if>
            <if test="where.typeEd!=null">
                `type` &lt;= #{where.typeEd} and
            </if>
                <if test="where.statusList != null">
                    `status` in
                    <foreach collection="where.statusList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.statusSt !=null">
                `status` >= #{where.statusSt} and
            </if>
            <if test="where.statusEd!=null">
                `status` &lt;= #{where.statusEd} and
            </if>
                <if test="where.amountList != null">
                    `amount` in
                    <foreach collection="where.amountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.amountSt !=null">
                `amount` >= #{where.amountSt} and
            </if>
            <if test="where.amountEd!=null">
                `amount` &lt;= #{where.amountEd} and
            </if>
                <if test="where.transferUuidList != null">
                    `transfer_uuid` in
                    <foreach collection="where.transferUuidList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyTransferUuid!=null and where.fuzzyTransferUuid.size()>0">
                (
                <foreach collection="where.fuzzyTransferUuid"  separator="or" item="item">
                    `Transfer_uuid` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyTransferUuid!=null and where.rightFuzzyTransferUuid.size()>0">
                (
                <foreach collection="where.rightFuzzyTransferUuid"  separator="or" item="item">
                    `Transfer_uuid` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.retryTimesList != null">
                    `retry_times` in
                    <foreach collection="where.retryTimesList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.retryTimesSt !=null">
                `retry_times` >= #{where.retryTimesSt} and
            </if>
            <if test="where.retryTimesEd!=null">
                `retry_times` &lt;= #{where.retryTimesEd} and
            </if>
                <if test="where.updateTimeList != null">
                    `update_time` in
                    <foreach collection="where.updateTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.updateTimeSt !=null">
                `update_time` >= #{where.updateTimeSt} and
            </if>
            <if test="where.updateTimeEd!=null">
                `update_time` &lt;= #{where.updateTimeEd} and
            </if>
                <if test="where.createTimeList != null">
                    `create_time` in
                    <foreach collection="where.createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createTimeSt !=null">
                `create_time` >= #{where.createTimeSt} and
            </if>
            <if test="where.createTimeEd!=null">
                `create_time` &lt;= #{where.createTimeEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.yy.idea_mybatis_generater.model.UserAccountTransfer" id="UserAccountTransferMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="amount" column="amount"/>
        <result property="transferUuid" column="transfer_uuid"/>
        <result property="retryTimes" column="retry_times"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
    </resultMap>


    <select id="queryUserAccountTransfer" resultMap="UserAccountTransferMap">
        select
        <include refid="baseResult"></include>
        from  `user_account_transfer`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="type != null">
                `type` = #{type} and
            </if>
            <if test="status != null">
                `status` = #{status} and
            </if>
            <if test="amount != null">
                `amount` = #{amount} and
            </if>
            <if test="transferUuid != null and transferUuid!=''">
                `transfer_uuid` = #{transferUuid} and
            </if>
            <if test="retryTimes != null">
                `retry_times` = #{retryTimes} and
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test = "(_parameter instanceof com.yy.idea_mybatis_generater.model.UserAccountTransfer$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="userIdList != null">
                    `user_id` in
                    <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                <if test="typeList != null">
                    `type` in
                    <foreach collection="typeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="typeSt !=null">
                    `type` >= #{typeSt} and
                </if>
                <if test="typeEd!=null">
                    `type` &lt;= #{typeEd} and
                </if>
                <if test="statusList != null">
                    `status` in
                    <foreach collection="statusList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="statusSt !=null">
                    `status` >= #{statusSt} and
                </if>
                <if test="statusEd!=null">
                    `status` &lt;= #{statusEd} and
                </if>
                <if test="amountList != null">
                    `amount` in
                    <foreach collection="amountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="amountSt !=null">
                    `amount` >= #{amountSt} and
                </if>
                <if test="amountEd!=null">
                    `amount` &lt;= #{amountEd} and
                </if>
                <if test="transferUuidList != null">
                    `transfer_uuid` in
                    <foreach collection="transferUuidList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyTransferUuid!=null and fuzzyTransferUuid.size()>0">
                    (
                    <foreach collection="fuzzyTransferUuid"  separator="or" item="item">
                        `Transfer_uuid` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyTransferUuid!=null and rightFuzzyTransferUuid.size()>0">
                    (
                    <foreach collection="rightFuzzyTransferUuid"  separator="or" item="item">
                        `Transfer_uuid` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="retryTimesList != null">
                    `retry_times` in
                    <foreach collection="retryTimesList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="retryTimesSt !=null">
                    `retry_times` >= #{retryTimesSt} and
                </if>
                <if test="retryTimesEd!=null">
                    `retry_times` &lt;= #{retryTimesEd} and
                </if>
                <if test="updateTimeList != null">
                    `update_time` in
                    <foreach collection="updateTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="updateTimeSt !=null">
                    `update_time` >= #{updateTimeSt} and
                </if>
                <if test="updateTimeEd!=null">
                    `update_time` &lt;= #{updateTimeEd} and
                </if>
                <if test="createTimeList != null">
                    `create_time` in
                    <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryUserAccountTransferLimit1" resultMap="UserAccountTransferMap">
        select
        <include refid="baseResult"></include>
        from  `user_account_transfer`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="type != null">
                `type` = #{type} and
            </if>
            <if test="status != null">
                `status` = #{status} and
            </if>
            <if test="amount != null">
                `amount` = #{amount} and
            </if>
            <if test="transferUuid != null and transferUuid!=''">
                `transfer_uuid` = #{transferUuid} and
            </if>
            <if test="retryTimes != null">
                `retry_times` = #{retryTimes} and
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test = "(_parameter instanceof com.yy.idea_mybatis_generater.model.UserAccountTransfer$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="userIdList != null">
                        `user_id` in
                        <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                    <if test="typeList != null">
                        `type` in
                        <foreach collection="typeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="typeSt !=null">
                    `type` >= #{typeSt} and
                </if>
                <if test="typeEd!=null">
                    `type` &lt;= #{typeEd} and
                </if>
                    <if test="statusList != null">
                        `status` in
                        <foreach collection="statusList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="statusSt !=null">
                    `status` >= #{statusSt} and
                </if>
                <if test="statusEd!=null">
                    `status` &lt;= #{statusEd} and
                </if>
                    <if test="amountList != null">
                        `amount` in
                        <foreach collection="amountList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="amountSt !=null">
                    `amount` >= #{amountSt} and
                </if>
                <if test="amountEd!=null">
                    `amount` &lt;= #{amountEd} and
                </if>
                    <if test="transferUuidList != null">
                        `transfer_uuid` in
                        <foreach collection="transferUuidList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyTransferUuid!=null and fuzzyTransferUuid.size()>0">
                    (
                    <foreach collection="fuzzyTransferUuid"  separator="or" item="item">
                        `Transfer_uuid` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyTransferUuid!=null and rightFuzzyTransferUuid.size()>0">
                    (
                    <foreach collection="rightFuzzyTransferUuid"  separator="or" item="item">
                        `Transfer_uuid` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="retryTimesList != null">
                        `retry_times` in
                        <foreach collection="retryTimesList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="retryTimesSt !=null">
                    `retry_times` >= #{retryTimesSt} and
                </if>
                <if test="retryTimesEd!=null">
                    `retry_times` &lt;= #{retryTimesEd} and
                </if>
                    <if test="updateTimeList != null">
                        `update_time` in
                        <foreach collection="updateTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="updateTimeSt !=null">
                    `update_time` >= #{updateTimeSt} and
                </if>
                <if test="updateTimeEd!=null">
                    `update_time` &lt;= #{updateTimeEd} and
                </if>
                    <if test="createTimeList != null">
                        `create_time` in
                        <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `user_id`,
        `type`,
        `status`,
        `amount`,
        `transfer_uuid`,
        `retry_times`,
        `update_time`,
        `create_time`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.yy.idea_mybatis_generater.model.UserAccountTransfer$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.userId==true">
                        `user_id`,
                    </if>
                    <if test="fetchFields.fetchFields.type==true">
                        `type`,
                    </if>
                    <if test="fetchFields.fetchFields.status==true">
                        `status`,
                    </if>
                    <if test="fetchFields.fetchFields.amount==true">
                        `amount`,
                    </if>
                    <if test="fetchFields.fetchFields.transferUuid==true">
                        `transfer_uuid`,
                    </if>
                    <if test="fetchFields.fetchFields.retryTimes==true">
                        `retry_times`,
                    </if>
                    <if test="fetchFields.fetchFields.updateTime==true">
                        `update_time`,
                    </if>
                    <if test="fetchFields.fetchFields.createTime==true">
                        `create_time`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.userId==null">
                        `user_id`,
                    </if>
                    <if test="fetchFields.excludeFields.type==null">
                        `type`,
                    </if>
                    <if test="fetchFields.excludeFields.status==null">
                        `status`,
                    </if>
                    <if test="fetchFields.excludeFields.amount==null">
                        `amount`,
                    </if>
                    <if test="fetchFields.excludeFields.transferUuid==null">
                        `transfer_uuid`,
                    </if>
                    <if test="fetchFields.excludeFields.retryTimes==null">
                        `retry_times`,
                    </if>
                    <if test="fetchFields.excludeFields.updateTime==null">
                        `update_time`,
                    </if>
                    <if test="fetchFields.excludeFields.createTime==null">
                        `create_time`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.yy.idea_mybatis_generater.model.UserAccountTransfer$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>